# docker-compose.yml
# Docker Compose for Azure Functions Local Development
# This is primarily for local testing and development

version: '3.8'

services:
  # Azure Functions App
  functions:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: confluence-qa-functions
    ports:
      - "7071:80"  # Azure Functions default port mapping
    environment:
      # Azure Functions Settings
      - AzureWebJobsStorage=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;QueueEndpoint=http://azurite:10001/devstoreaccount1;
      - FUNCTIONS_WORKER_RUNTIME=python
      - FUNCTIONS_EXTENSION_VERSION=~4
      
      # Application Settings (from local.settings.json)
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_SEARCH_ENDPOINT=${AZURE_SEARCH_ENDPOINT}
      - AZURE_SEARCH_KEY=${AZURE_SEARCH_KEY}
      - AZURE_SEARCH_INDEX_NAME=${AZURE_SEARCH_INDEX_NAME:-confluence-docs}
      - COSMOS_DB_ENDPOINT=${COSMOS_DB_ENDPOINT}
      - COSMOS_DB_KEY=${COSMOS_DB_KEY}
      - COSMOS_DB_DATABASE_NAME=${COSMOS_DB_DATABASE_NAME:-ConfluenceQA}
      - COSMOS_DB_CONVERSATIONS_CONTAINER=conversations
      - COSMOS_DB_THINKING_CONTAINER=thinking_steps
      - COSMOS_GRAPH_DB_ENDPOINT=${COSMOS_GRAPH_DB_ENDPOINT}
      - COSMOS_GRAPH_DB_KEY=${COSMOS_GRAPH_DB_KEY}
      - COSMOS_GRAPH_DB_DATABASE=confluence-graph
      - COSMOS_GRAPH_DB_COLLECTION=page-relationships
      - AZURE_STORAGE_CONNECTION_STRING=${AZURE_STORAGE_CONNECTION_STRING}
      - AZURE_STORAGE_RAW_CONTAINER=confluence-raw
      - AZURE_STORAGE_PROCESSED_CONTAINER=confluence-processed
      
      # AutoGen & System Configuration
      - MAX_HOPS=3
      - CONFIDENCE_THRESHOLD=0.7
      - EDGE_TYPES=ParentOf,LinksTo,References
      - TOTAL_TIMEOUT=30
      - MAX_SUBQUESTIONS=5
      - MAX_SEARCH_RESULTS=25
      
      # Azure Specific
      - COSMOS_ACCOUNT=${COSMOS_ACCOUNT}
      - COSMOS_KEY=${COSMOS_KEY}
      - COSMOS_DB=${COSMOS_DB}
      - COSMOS_GRAPH=${COSMOS_GRAPH}
      - STORAGE_ACCOUNT=${STORAGE_ACCOUNT}
      - STORAGE_KEY=${STORAGE_KEY}
      - SEARCH_ENDPOINT=${SEARCH_ENDPOINT}
      - SEARCH_INDEX=${SEARCH_INDEX}
      - AOAI_ENDPOINT=${AOAI_ENDPOINT}
      - AOAI_KEY=${AOAI_KEY}
      - AOAI_EMBED_DEPLOY=${AOAI_EMBED_DEPLOY}
      - AOAI_CHAT_DEPLOY=${AOAI_CHAT_DEPLOY}
      
    volumes:
      - ./:/home/site/wwwroot
      - ./.python_packages:/home/site/wwwroot/.python_packages
    depends_on:
      - azurite
    networks:
      - functions-network

  # Azurite - Azure Storage Emulator
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite:latest
    container_name: confluence-qa-azurite
    ports:
      - "10000:10000"  # Blob
      - "10001:10001"  # Queue
      - "10002:10002"  # Table
    volumes:
      - azurite-data:/data
    command: azurite --loose --blobHost 0.0.0.0 --queueHost 0.0.0.0 --tableHost 0.0.0.0 --location /data --debug /data/debug.log
    networks:
      - functions-network

  # Cosmos DB Emulator (Optional - for full local development)
  # Note: This requires significant resources and may not work on all systems
  # cosmos-emulator:
  #   image: mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator:latest
  #   container_name: confluence-qa-cosmos
  #   ports:
  #     - "8081:8081"
  #     - "10251:10251"
  #     - "10252:10252"
  #     - "10253:10253"
  #     - "10254:10254"
  #   environment:
  #     - AZURE_COSMOS_EMULATOR_PARTITION_COUNT=10
  #     - AZURE_COSMOS_EMULATOR_ENABLE_DATA_PERSISTENCE=true
  #     - AZURE_COSMOS_EMULATOR_IP_ADDRESS_OVERRIDE=127.0.0.1
  #   volumes:
  #     - cosmos-data:/data
  #   networks:
  #     - functions-network

volumes:
  azurite-data:
  # cosmos-data:

networks:
  functions-network:
    driver: bridge